name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  lint-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Lint
        run: make lint
      - name: Tests
        run: make test
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: coverage.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  bundle:
    needs: lint-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: bundle-win
            artifact: glyphx-windows
            pattern: dist/glyphx.exe
          - os: macos-latest
            target: bundle-mac
            artifact: glyphx-macos
            pattern: dist/glyphx
          - os: ubuntu-latest
            target: bundle-linux
            artifact: glyphx-linux
            pattern: dist/glyphx
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Extract version info
        id: version
        shell: bash
        run: |
          # Get the latest tag or use dev version
          VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "0.1.0-dev")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      
      - name: Build bundle
        run: |
          make clean-bundles
          make ${{ matrix.target }}
      
      - name: Upload bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}-${{ steps.version.outputs.version }}
          path: ${{ matrix.pattern }}
          retention-days: 30
